{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Homepage.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","TrophyOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","Typography","Homepage","data","isFetching","globalStats","stats","console","log","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","item","name","toLowerCase","includes","placeholder","onChange","e","target","gutter","map","currency","xs","sm","lg","id","rank","extra","iconUrl","alt","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.99c4d149.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Button,Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n  TrophyOutlined\r\n} from \"@ant-design/icons\";\r\nimport icon from \"../images/cryptocurrency.png\";\r\nconst Navbar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize <= 800) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">Crypto4All</Link>\r\n        </Typography.Title>\r\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\r\n            <MenuOutlined/>\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n          <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/Exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News-Blog</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<TrophyOutlined />}>\r\n            <Link to=\"/NftGame\">NFT-Games</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import {createApi , fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '4562b457b6mshd878fbf8209cb08p173263jsn413155148629'\r\n}\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers:cryptoApiHeaders})\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptos : builder.query({\r\n            query : (count) => createRequest(`/coins?Limit=${count}`)\r\n        }),\r\n        getCryptoDetails : builder.query({\r\n            query : (coinId) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n          }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n          }),\r\n          \r\n    })\r\n});\r\n\r\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Typography , Row , Col , Statistic } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport { Cryptocurrencies ,News} from '../components'\r\nimport Loader from './Loader';\r\n\r\nconst {Title} = Typography;\r\nconst Homepage = () => {\r\n    const {data , isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    console.log(data);\r\n\r\n    if(isFetching) return <Loader />;\r\n    return (\r\n        <>\r\n        <Title level = {2} className=\"heading\">Global Crypto Stats</Title>\r\n        <Row>\r\n            <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}/></Col>\r\n            <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/></Col>\r\n        </Row>\r\n\r\n        <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Top 10 Cryptos In The World</Title>\r\n            <Title level={3} className=\"show-more\"><Link to=\"/Cryptocurrencies\">Show more</Link></Title>\r\n        </div>\r\n        <Cryptocurrencies simplified />\r\n        <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n            <Title level={3} className=\"show-more\"><Link to=\"/News\">Show more</Link></Title>\r\n        </div>\r\n        <News simplified/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React, { useEffect, useState } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Loader from './Loader';\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n\r\n  const count = simplified ? 10 : 50;   \r\n\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [searchTerm , setSearchTerm] = useState('')\r\n \r\n  useEffect(()=>{\r\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\r\n\r\n    setCryptos(filteredData);\r\n  },[cryptosList,searchTerm]);\r\n\r\n  if(isFetching) return <Loader/>;\r\n  return (\r\n    <>\r\n    {!simplified && (\r\n    <div className=\"search-crypto\">\r\n        <Input placeholder = \"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)}/>\r\n    </div>\r\n          )}\r\n      \r\n\r\n      \r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n            <Link to={`/crypto/${currency.id}`}>\r\n              <Card\r\n                title={`${currency.rank}.${currency.name}`}\r\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"Coin\"/>}\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}$</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {currency.change}%</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">{link.type}</Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;\r\n","import {createApi , fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '4562b457b6mshd878fbf8209cb08p173263jsn413155148629'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers:cryptoNewsHeaders})\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews : builder.query({\r\n            query : ({newsCategory , count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n})\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n\r\n// /news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}","import React , { useState } from 'react'\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text , Title } = Typography;\r\nconst {Option} = Select;\r\n\r\nconst demoImage='https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News'\r\n\r\nconst News = ({simplified}) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n    \r\n    const {data} = useGetCryptosQuery(50);\r\n    const { data : cryptoNews } = useGetCryptoNewsQuery({ newsCategory , count : simplified ? 6 : 20})\r\n    \r\n    if(!cryptoNews ?.value) return <Loader/>;\r\n    return (\r\n        <Row gutter = {[24,24]}>\r\n\r\n        {!simplified && (\r\n            <Col span={24}>\r\n            <Select\r\n                showSearch\r\n                className=\"select-news\"\r\n                placeholder=\"Select a Crypto\"\r\n                optionFilterProp=\"children\"\r\n                onChange={(value) => setNewsCategory(value)}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\r\n          </Select>\r\n        </Col>\r\n      )}    \r\n\r\n            {cryptoNews.value.map((news,i ) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\" >\r\n                        <a href = {news.url} target = \"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                <img style={{maxWidth:'200px',maxHeight:'100px'}} src={news ?.image ?.thumbnail ?.contentUrl || demoImage} alt=\"News\"/>\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100 ? `${news.description.substring(0,100)}...`\r\n                                : news.description\r\n                                }\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage}  alt = \"news\"/>\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport { Navbar , Homepage , Exchanges , Cryptocurrencies , CryptoDetails , News} from './components';\nimport './App.css';\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar/>\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Homepage/>\n                </Route>\n\n                <Route exact path=\"/Exchanges\">\n                  <Exchanges/>\n                </Route>\n\n                <Route exact path=\"/Cryptocurrencies\">\n                  <Cryptocurrencies/>\n                </Route>\n\n                <Route exact path=\"/crypto/:coinId\">\n                  <CryptoDetails/>\n                </Route>\n\n                <Route exact path=\"/News\">\n                  <News/>\n                </Route>\n              </Switch>\n          </div>\n        </Layout>\n      \n          <div className=\"footer\">\n            <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2021\n            <Link to=\"/\">\n            Crypto4All Inc.\n            </Link> <br />\n            All Rights Reserved.\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n    \n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        [cryptoApi.reducerPath] : cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath] : cryptoNewsApi.reducer\r\n    },\r\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from './app/store';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}